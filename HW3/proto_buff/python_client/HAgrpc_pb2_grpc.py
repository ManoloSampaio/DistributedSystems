# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import HAgrpc_pb2 as HAgrpc__pb2


class ActuatorGRPCStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TunrnOn = channel.unary_unary(
                '/ActuatorGRPC/TunrnOn',
                request_serializer=HAgrpc__pb2.Request.SerializeToString,
                response_deserializer=HAgrpc__pb2.Response.FromString,
                )
        self.TunrnOff = channel.unary_unary(
                '/ActuatorGRPC/TunrnOff',
                request_serializer=HAgrpc__pb2.Request.SerializeToString,
                response_deserializer=HAgrpc__pb2.Response.FromString,
                )
        self.ModStatus = channel.unary_unary(
                '/ActuatorGRPC/ModStatus',
                request_serializer=HAgrpc__pb2.Request.SerializeToString,
                response_deserializer=HAgrpc__pb2.Response.FromString,
                )
        self.SeeStatus = channel.unary_unary(
                '/ActuatorGRPC/SeeStatus',
                request_serializer=HAgrpc__pb2.Request.SerializeToString,
                response_deserializer=HAgrpc__pb2.Response.FromString,
                )


class ActuatorGRPCServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TunrnOn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TunrnOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SeeStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ActuatorGRPCServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TunrnOn': grpc.unary_unary_rpc_method_handler(
                    servicer.TunrnOn,
                    request_deserializer=HAgrpc__pb2.Request.FromString,
                    response_serializer=HAgrpc__pb2.Response.SerializeToString,
            ),
            'TunrnOff': grpc.unary_unary_rpc_method_handler(
                    servicer.TunrnOff,
                    request_deserializer=HAgrpc__pb2.Request.FromString,
                    response_serializer=HAgrpc__pb2.Response.SerializeToString,
            ),
            'ModStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ModStatus,
                    request_deserializer=HAgrpc__pb2.Request.FromString,
                    response_serializer=HAgrpc__pb2.Response.SerializeToString,
            ),
            'SeeStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SeeStatus,
                    request_deserializer=HAgrpc__pb2.Request.FromString,
                    response_serializer=HAgrpc__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ActuatorGRPC', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ActuatorGRPC(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TunrnOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ActuatorGRPC/TunrnOn',
            HAgrpc__pb2.Request.SerializeToString,
            HAgrpc__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TunrnOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ActuatorGRPC/TunrnOff',
            HAgrpc__pb2.Request.SerializeToString,
            HAgrpc__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ActuatorGRPC/ModStatus',
            HAgrpc__pb2.Request.SerializeToString,
            HAgrpc__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SeeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ActuatorGRPC/SeeStatus',
            HAgrpc__pb2.Request.SerializeToString,
            HAgrpc__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
